plugins {
    id "com.jfrog.bintray" version "1.6"
}

repositories {
    mavenCentral()
    jcenter()
}

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven'

group = 'com.oblac'
version = 1.1

sourceCompatibility = 1.7
targetCompatibility = 1.7


dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

// -----------------------------------------------------------------------------
// MAVEN

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar

    archives sourcesJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    configurations = ['archives']

    dryRun = false
    publish = true

    pkg {
        userOrg = 'oblac'
        repo = 'java'
        name = "com.oblac:${project.name}"
        desc = 'Random name generator'
        licenses = ['BSD 2-Clause']
        vcsUrl = 'https://github.com/igorspasic/nomen-est-omen'
        issueTrackerUrl = 'https://github.com/igorspasic/nomen-est-omen/issues'
        publicDownloadNumbers = true

        version {
            name = project.version
            vcsTag = project.version
        }
    }
}

install {
    repositories.mavenInstaller {
        customizePom(pom, project)
    }
}

uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        customizePom(pom, project)
    }
}

def customizePom(pom, gradleProject) {
    pom.whenConfigured { generatedPom ->

        // eliminate test-scoped dependencies (no need in maven central POMs)
        generatedPom.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        generatedPom.project {
            name = "Nomen est Omen"
            description = "Random names generator"
            url = 'https://github.com/igorspasic/nomen-est-omen'
            organization {
                name = 'Oblac'
                url = 'http://oblac.com'
            }
            issueManagement {
                system = 'GitHub'
                url = 'https://github.com/igorspasic/nomen-est-omen/issues'
            }
            licenses {
                license {
                    name 'The New BSD License'
                    url 'https://github.com/igorspasic/nomen-est-omen/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url = 'https://github.com/igorspasic/nomen-est-omen/'
                connection = 'scm:git:git://github.com/igorspasic/nomen-est-omen.git'
                developerConnection = 'scm:git:ssh://git@github.com/igorspasic/nomen-est-omen.git'
            }
            developers {
                developer {
                    id = 'igor'
                    name = 'Igor Spasic'
                    email = 'igor@jodd.org'
                    timezone = '+1'
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.12'
}